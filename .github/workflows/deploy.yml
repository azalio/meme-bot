name: Build, Push, and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/meme-bot
  KUBE_NAMESPACE: meme-bot
  HELM_CHART_PATH: ./charts
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"

jobs:
    build-to-ghcr:
        runs-on: arc-runner-set # uses self-hosted runner scale set
        container:
          image: gcr.io/kaniko-project/executor:v1.20.0-debug # the kaniko image
        permissions:
          contents: read # read the repository
          packages: write # to push to GHCR, omit for other container registry. https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#publishing-a-package-using-an-action
    
        steps:
          - name: Build and Push Image to GHCR with kaniko
            run: |
              cat <<EOF > /kaniko/.docker/config.json
              {
                "auths": {
                  "ghcr.io": {
                    "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
                  }
                }
              }
              EOF
    
              /kaniko/executor --dockerfile="./Dockerfile" \
                --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}"  \
                --destination="$GH_REGISTRY/$IMAGE_NAME:$(echo ${GITHUB_SHA} | head  -c 7)" \
                ${{ env.KANIKO_CACHE_ARGS }} \
                --push-retry 5 
            env: # needed to authenticate to github and download the repo
              GIT_USERNAME: ${{ github.actor }} 
              GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
              GH_REGISTRY: "ghcr.io"
              IMAGE_NAME: "${{ github.repository }}/meme-bot"

    deploy-to-k8s:
        runs-on: arc-runner-set
        needs: build-to-ghcr
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Helm
              run: |
                curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

            # - name: Configure Kubernetes
            #   uses: azure/setup-kubectl@v3
            #   with:
            #     version: 'latest'

            # - name: Configure kubeconfig
            #   run: |
            #     # Create kubeconfig with Service Account token
            #     cat <<EOF > kubeconfig.yaml
            #     apiVersion: v1
            #     kind: Config
            #     clusters:
            #     - name: meme-bot-cluster
            #       cluster:
            #         certificate-authority-data: ${{ secrets.KUBE_CA }}
            #         server: ${{ secrets.KUBE_SERVER }}
            #     users:
            #     - name: meme-bot-deployer
            #       user:
            #         token: ${{ secrets.KUBE_TOKEN }}
            #     contexts:
            #     - name: meme-bot-context
            #       context:
            #         cluster: meme-bot-cluster
            #         user: meme-bot-deployer
            #         namespace: ${{ env.KUBE_NAMESPACE }}
            #     current-context: meme-bot-context
            #     EOF
            #     export KUBECONFIG=kubeconfig.yaml

            # - name: Apply RBAC permissions
            #   run: |
            #     kubectl apply -f .github/arc-runner-role.yaml
            #     kubectl apply -f .github/arc-runner-rolebinding.yaml

            - name: Deploy to Kubernetes using Helm
              run: |
                helm upgrade --install meme-bot ${{ env.HELM_CHART_PATH }} \
                  --namespace ${{ env.KUBE_NAMESPACE }} \
                  --set image.repository=${{ env.DOCKER_IMAGE }} \
                  --set image.tag=$(echo ${GITHUB_SHA} | head -c 7) \
                  --set serviceAccount.name=meme-bot-deployer
